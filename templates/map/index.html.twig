{% extends 'base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css"
          integrity="sha256-kLaT2GOSpHechhsozzB+flnD+zUyjE2LlfWPgU04xyI="
          crossorigin=""/>
    <style>
        #map {
            height: 450px;
            border: 2px solid red;
        }
    </style>
{% endblock %}

{% block body %}
    <h1>La Carte du RÃ©seau CTS</h1>

    <div id="map"></div>

    <h2>Lignes de tram</h2>
    <ul>
        {% for polyline in polylines %}
            <li style="color: {{ polyline.color }}">{{ polyline.lineName }}</li>
        {% endfor %}
    </ul>

    {% for marker in markers %}
        <a href="{{ path('horaires_map', {'stopCode': marker.stopCode}) }}" class="btn btn-primary">Voir les horaires pour {{ marker.stopName }}</a>
    {% endfor %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"
            integrity="sha256-WBkoXOwTeyKclOHuWtc+i2uENFpDZ9YPdf5Hf+D7ewM="
            crossorigin=""></script>
    <script>
    var stopTimesUrlTemplate = "{{ path('horaires_map', {'stopCode': 'stopCode'}) }}";

    document.addEventListener('DOMContentLoaded', function () {
        var markers = {{ markers | json_encode | raw }};
        var polylines = {{ polylines | json_encode | raw }};

        var map = L.map('map').setView([48.5734053, 7.7521113], 13);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors',
            maxZoom: 18
        }).addTo(map);

        function init() {
            for (var i = 0; i < markers.length; i++) {
                var markerData = markers[i];

                if (markerData.latitude !== undefined && markerData.longitude !== undefined) {
                    var marker = L.marker([markerData.latitude, markerData.longitude]).addTo(map);

                    var popupContent = '<strong>' + markerData.stopName + '</strong><br>';
                    popupContent += '<strong>Destinations de lignes :</strong><br>';
                    for (var j = 0; j < markerData.linesDestinations.length; j++) {
                        popupContent += markerData.linesDestinations[j] + '<br>';
                    }

                    var stopTimesUrl = stopTimesUrlTemplate.replace('stopCode', markerData.stopCode);
                    popupContent += '<a href="' + stopTimesUrl + '">Voir les horaires</a>';

                    marker.bindPopup(popupContent);
                }
            }

            for (var k = 0; k < polylines.length; k++) {
                var polylineData = polylines[k];
                var lineCoordinates = polylineData.coordinates;

                if (lineCoordinates.length >= 2) {
                    var polyline = L.polyline(lineCoordinates, { color: polylineData.color }).addTo(map);
                    polyline.bindPopup(polylineData.lineName);
                }
            }
        }

        init();
    });
    </script>
{% endblock %}

{% endblock %}
