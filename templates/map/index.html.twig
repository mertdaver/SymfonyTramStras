{% extends 'base.html.twig' %}

{% block stylesheets %}
	{{ parent() }}
	<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css" integrity="sha256-kLaT2GOSpHechhsozzB+flnD+zUyjE2LlfWPgU04xyI=" crossorigin=""/>
	<style>
		#map {
			height: 450px;
			border: 2px solid red;
		}
	</style>
{% endblock %}

{% block body %}
	<h1>La Carte du Réseau CTS</h1>

	<div id="map"></div>


	{% block javascripts %}
		{{ parent() }}
		<script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js" integrity="sha256-WBkoXOwTeyKclOHuWtc+i2uENFpDZ9YPdf5Hf+D7ewM=" crossorigin=""></script>
		<script>
			var stopTimesUrlTemplate = "{{ path('horaires_map', {'stopCode': 'stopCode'}) }}";

document.addEventListener('DOMContentLoaded', function () {
var markers = {{ markers | json_encode | raw }};
var polylines = {{ polylines | json_encode | raw }};

var map = L.map('map').setView([
48.5734053, 7.7521113
], 13);

// Couche de tuiles OpenStreetMap
L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors',
maxZoom: 18
}).addTo(map);

// Votre couche de tuiles personnalisée
L.tileLayer('/directory/Mapnik/{z}/{x}/{y}.png', {maxZoom: 18}).addTo(map);

var customIcon = L.icon({
iconUrl: '/path/to/your/icon.png', // Remplacer par le chemin vers votre icône
iconSize: [
38, 95
], // Taille de l'icône
iconAnchor: [
22, 94
], // Point de l'icône qui correspondra à la position du marqueur
popupAnchor: [-3, -76] // Point de l'icône où le popup sera ancré
});

function fadeMarker(marker) {
var opacity = 1;
var timer = setInterval(function () {
if (opacity <= 0) {
clearInterval(timer);
map.removeLayer(marker); // Supprime le marqueur une fois qu'il est complètement transparent
}marker.setOpacity(opacity);
opacity -= 0.02; // Vitesse de décoloration, augmenter pour un effet plus rapide
}, 100); // Intervalle de temps entre chaque décoloration, diminuer pour un effet plus rapide
}map.on('click', function (e) {
var marker = L.marker(e.latlng, {icon: customIcon}).addTo(map);
marker.bindPopup("<b>Vous venez de signalez une alerte ici</b>").openPopup();
fadeMarker(marker); // Ajoute l'appel à la fonction fadeMarker
});

function init() {
for (var i = 0; i < markers.length; i++) {
var markerData = markers[i];

if (markerData.latitude !== undefined && markerData.longitude !== undefined) {
var marker = L.marker([markerData.latitude, markerData.longitude]).addTo(map);

var popupContent = '<strong>' + markerData.stopName + '</strong><br>';
popupContent += '<strong>Destinations de lignes :</strong><br>';
for (var j = 0; j < markerData.linesDestinations.length; j++) {
popupContent += markerData.linesDestinations[j] + '<br>';
}

var stopTimesUrl = stopTimesUrlTemplate.replace('stopCode', markerData.stopCode);
popupContent += '<a href="' + stopTimesUrl + '">Voir les horaires</a>';

marker.bindPopup(popupContent);
}
}

for (var k = 0; k < polylines.length; k++) {
var polylineData = polylines[k];
var lineCoordinates = polylineData.coordinates;

if (lineCoordinates.length >= 2) {
var polyline = L.polyline(lineCoordinates, {color: polylineData.color}).addTo(map);
polyline.bindPopup(polylineData.lineName);
}
}
}

init();
});
		</script>
	{% endblock %}

{% endblock %}
